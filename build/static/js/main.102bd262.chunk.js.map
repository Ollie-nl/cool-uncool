{"version":3,"sources":["data lazy /^/.//slides/-.*/-.*/.json$/ groupOptions: {} namespace object","components/Slide.js","components/DarkModeToggle/DarkModeToggle.js","components/MonthSelector/MonthSelector.js","components/SlideDeck.js","App.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","Slide","_ref","slide","isActive","iframeRef","useRef","playerRef","useEffect","type","current","initializePlayer","window","YT","Player","events","onReady","event","target","pauseVideo","onYouTubeIframeAPIReady","React","createElement","className","content","title","ref","url","width","height","src","includes","replace","frameBorder","allow","allowFullScreen","DarkModeToggle","isDarkMode","onToggle","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","MonthSelector","months","selectedMonth","onSelect","htmlFor","value","onChange","month","key","SlideDeck","useState","availableMonths","currentSlide","setCurrentSlide","setIsDarkMode","setSelectedMonth","slides","setSlides","async","year","split","slidesForMonth","error","console","loadSlides","handleKeyDown","useCallback","length","prev","addEventListener","removeEventListener","handlers","useSwipeable","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","assign","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.102bd262.chunk.js","sourcesContent":["var map = {\n\t\"./slides-2024-10.json\": [\n\t\t19,\n\t\t3\n\t],\n\t\"./slides-2024-12.json\": [\n\t\t20,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 17;\nmodule.exports = webpackAsyncContext;","import React, { useEffect, useRef } from 'react';\n\nconst Slide = ({ slide, isActive }) => {\n  const iframeRef = useRef(null);\n  const playerRef = useRef(null);\n\n  // Dynamisch de embed-URL maken\n  const getEmbedUrl = (url) => {\n    if (url.includes('/shorts/')) {\n      return url.replace('/shorts/', '/embed/');\n    }\n    return url;\n  };\n\n  useEffect(() => {\n    if (slide.type === 'youtube' && iframeRef.current) {\n      const initializePlayer = () => {\n        if (!playerRef.current && window.YT && window.YT.Player) {\n          playerRef.current = new window.YT.Player(iframeRef.current, {\n            events: {\n              onReady: (event) => {\n                if (!isActive) {\n                  event.target.pauseVideo();\n                }\n              },\n            },\n          });\n        } else if (playerRef.current && !isActive) {\n          playerRef.current.pauseVideo();\n        }\n      };\n\n      if (window.YT && window.YT.Player) {\n        initializePlayer();\n      } else {\n        // Wacht op de YouTube API om geladen te worden\n        window.onYouTubeIframeAPIReady = initializePlayer;\n      }\n    }\n  }, [isActive, slide.type]);\n\n  return (\n    <div className={`slide ${isActive ? 'active' : 'inactive'}`}>\n      {slide.type === 'heading' && <h1>{slide.content}</h1>}\n      {slide.type === 'paragraph' && <p>{slide.content}</p>}\n      {slide.type === 'youtube' && (\n        <div>\n          {slide.title && <h2>{slide.title}</h2>}\n          <iframe\n            ref={iframeRef}\n            id={`youtube-player-${slide.url}`}\n            width=\"560\"\n            height=\"315\"\n            src={`${getEmbedUrl(slide.url)}?enablejsapi=1`}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            title={slide.title || 'YouTube video'}\n          ></iframe>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Slide;\n","import React from 'react';\nimport './DarkModeToggle.css';\n\nconst DarkModeToggle = ({ isDarkMode, onToggle }) => {\n  return (\n    <button\n      className={`dark-mode-toggle ${isDarkMode ? 'dark' : 'light'}`}\n      onClick={onToggle}\n    >\n      {isDarkMode ? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"icon\"\n        >\n          <path d=\"M21.72 13a9 9 0 01-10.94-10 9 9 0 1010.94 10z\" />\n        </svg>\n      ) : (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"icon\"\n        >\n          <path d=\"M12 3v1M12 20v1M4.22 4.22l.71.71M19.07 19.07l.71.71M1 12h1M22 12h1M4.22 19.78l.71-.71M19.07 4.93l.71-.71\" />\n          <circle cx=\"12\" cy=\"12\" r=\"5\" />\n        </svg>\n      )}\n      <span className=\"label\">{isDarkMode ? 'Dark' : 'Light'}</span>\n    </button>\n  );\n};\n\nexport default DarkModeToggle;\n","import React from 'react';\nimport './MonthSelector.css';\n\nconst MonthSelector = ({ months, selectedMonth, onSelect }) => {\n  return (\n    <div className=\"month-selector\">\n      <label htmlFor=\"month-select\" className=\"month-label\">\n        Kies een maand:\n      </label>\n      <select\n        id=\"month-select\"\n        value={selectedMonth}\n        onChange={(e) => onSelect(e.target.value)}\n        className=\"month-dropdown\"\n      >\n        {months.map((month) => (\n          <option key={month} value={month}>\n            {month}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default MonthSelector;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSwipeable } from 'react-swipeable'; // Swipeable library\nimport Slide from './Slide';\nimport DarkModeToggle from './DarkModeToggle/DarkModeToggle';\nimport MonthSelector from './MonthSelector/MonthSelector';\nimport availableMonths from '../data/available-months.json'; // Voor maanden\n\nconst SlideDeck = () => {\n  const [months] = useState(availableMonths.months || []);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [selectedMonth, setSelectedMonth] = useState(months[0] || '');\n  const [slides, setSlides] = useState([]);\n\n  // Laad slides op basis van de geselecteerde maand\n  useEffect(() => {\n    const loadSlides = async () => {\n      try {\n        const [year, month] = selectedMonth.split('-');\n        const { slides: slidesForMonth } = await import(\n          `../data/slides-${year}-${month}.json`\n        );\n        setSlides(slidesForMonth);\n        setCurrentSlide(0);\n      } catch (error) {\n        console.error(`Geen slides beschikbaar voor ${selectedMonth}:`, error);\n        setSlides([]);\n      }\n    };\n\n    if (selectedMonth) {\n      loadSlides();\n    }\n  }, [selectedMonth]);\n\n  // Pijltjestoetsen-navigatie\n  const handleKeyDown = useCallback(\n    (e) => {\n      if (\n        (e.key === 'ArrowRight' || e.key === 'ArrowDown') &&\n        currentSlide < slides.length - 1\n      ) {\n        setCurrentSlide((prev) => prev + 1);\n      } else if (\n        (e.key === 'ArrowLeft' || e.key === 'ArrowUp') &&\n        currentSlide > 0\n      ) {\n        setCurrentSlide((prev) => prev - 1);\n      }\n    },\n    [currentSlide, slides.length]\n  );\n\n  // Event listener voor toetsenbord\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  // Swipe functionaliteit\n  const handlers = useSwipeable({\n    onSwipedLeft: () => {\n      if (currentSlide < slides.length - 1) {\n        setCurrentSlide((prev) => prev + 1);\n      }\n    },\n    onSwipedRight: () => {\n      if (currentSlide > 0) {\n        setCurrentSlide((prev) => prev - 1);\n      }\n    },\n    preventDefaultTouchmoveEvent: true, // Voorkom standaard swipe gedrag\n    trackMouse: true, // Voor desktop ondersteuning\n  });\n\n  return (\n    <div\n      {...handlers} // Voeg swipe-functionaliteit toe\n      className={`slide-deck ${isDarkMode ? 'dark-mode' : 'light-mode'}`}\n    >\n      {/* Dark Mode Toggle */}\n      <DarkModeToggle\n        isDarkMode={isDarkMode}\n        onToggle={() => setIsDarkMode((prev) => !prev)}\n      />\n\n      {/* Render alleen de huidige slide */}\n      {slides.length > 0 ? (\n        <Slide slide={slides[currentSlide]} isActive={true} />\n      ) : (\n        <div className=\"no-slides\">\n          Geen slides beschikbaar voor deze maand.\n        </div>\n      )}\n\n      {/* Slide counter en maandselector */}\n      {slides.length > 0 && (\n        <div className=\"slide-counter\">\n          <MonthSelector\n            months={months}\n            selectedMonth={selectedMonth}\n            onSelect={setSelectedMonth}\n          />\n          <div className=\"counter-text\">\n            {slides.length - currentSlide - 1 > 0\n              ? `Nog ${slides.length - currentSlide - 1} ${\n                  slides.length - currentSlide - 1 === 1 ? 'slide' : 'slides'\n                } te gaan`\n              : 'Laatste slide!'}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SlideDeck;\n","import React from 'react';\nimport SlideDeck from './components/SlideDeck';\nimport './styles/index.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SlideDeck />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles/index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}